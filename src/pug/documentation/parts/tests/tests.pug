include ../mixins/article

a(name="tests")

h2.text-md.text-center.docs-template-block Тестирование и валидация
h2.text-md.text-center.docs-template-block Тестирование
p Доступно 3 вида инструментов для тестирование, автор проекта использует <b>Jasmine</b>
ul
	li
		a(href="#jasmine_tests") Jasmine
	li
		a(href="#mocha_tests") Mocha
	li
		a(href="#gui_tests") GUI
	li
		a(href="#speed_tests") Speed load page
p.
	* Сноска, во время выполнения GUI тестов удобно использовать cl.log для уведомлений в консоль.

+description('jasmine_tests', 'gulp test:jasmine', 'Jasmine tests','Jasmine - это open source фрэймворк для тестирования исходного кода JavaScript. Он предназначен для запуска тестов на любой платформе с поддержкой JavaScript, а также имеет простой синтаксис. Автор проекта Easy-light-project рекомендует использовать именно этот фреймворк.')
+description('mocha_tests', 'gulp test:mocha', 'Mocha tests', 'Mocha - это фрэймворк на JavaScript для проведения тестов программ на Node.js с поддержкой браузера, асинхронным тестированием, отчетами об охвате тестирования. Как правило используеться с какой либо библиотекой утверждений которую придеться устанавливать дополнительно.')
+description('gui_tests', 'gulp test:gui', 'GUI tests', 'GUI тестирование - тестирование приложений через графический пользовательский интерфейс. Такой метод тестирования позволяет тестировать приложение тем же способом, которым его будет использовать человек. Для запуска таких тестов в ELP используются Webdriver и selenium.')
+description('speed_tests', 'gulp test:speed', 'Speed load page tests', 'Тестирование загрузки страницы необходимо для оценки производительности работы вашего приложения,эмуляция браузера позволяет запускать тесты прямо из консоли и результаты такого тестирования выводяться в консоль, экономя вам время на кликах в браузере')
